}
fn_plot_pred <- function(predict, model) {
confplot(as.integer(rownames(predict)), model$pred-2*model$se, model$pred+2*model$se, ylim = c(- 4, 4))
confplot(as.integer(rownames(predict)), model$pred-model$se, model$pred+model$se, col="darkgray", add=TRUE)
points(as.integer(rownames(predict)), predict$interestRate,  col="green")
lines(as.integer(rownames(predict)), predict$interestRate, col="green")
points(as.integer(rownames(predict)), model$pred, col="red")
lines(as.integer(rownames(predict)), model$pred, col="red")
}
# Ako prve si nastavime cestu k nasim datam a nacitame ich
setwd("C:/Users/majko/Desktop/Casove_rady_projekt")
data <- read.csv("ECB Data Portal_20231112202535.csv",
header=TRUE)
# Teraz si tie data pripravime (pridame stlpec roku)
data <- data[c(2,3)]
colnames(data) <- c("yearMonth", "interestRate")
getwd
getwd()
scriptPath <- getSourceEditorContext()$path
getSourceEditorContext()$path
library(astsa)
library(urca)
library(areaplot)
library(rstudioapi)
scriptPath <- getSourceEditorContext()$path
folderPath <- gsub("/Casove_rady_kravec\\.Rmd","",scriptPath)
setwd(folderPath)
# Ako prve si nastavime cestu k nasim datam a nacitame ich
setwd("C:/Users/majko/Desktop/Casove_rady_projekt")
data <- read.csv("ECB Data Portal_20231112202535.csv",
header=TRUE)
getwd()
getSourceEditorContext()$path
gsub("/Casove_rady_kravec\\.Rmd","",scriptPath)
setwd(folderPath)
getwd()
folderPath
setwd(folderPath)
getwd()
data <- read.csv("ECB Data Portal_20231112202535.csv",
header=TRUE)
# Teraz si tie data pripravime (pridame stlpec roku)
data <- data[c(2,3)]
colnames(data) <- c("yearMonth", "interestRate")
data["year"] <- as.integer(substring(data$yearMonth, 1,4 ))
# Tieto data si to
data_train <- data[data$year %in% 2001:2020,]
data_predict <- data[data$year > 2020,]
# ako prve si vykreslime nase trenovacie data
plot(as.integer(rownames(data_train)), data_train$interestRate)
lines(as.integer(rownames(data_train)),data_train$interestRate)
# vidime klesajuci trend v datach ktory si este skusme potvrdit ACF funciou
acf2(data_train$interestRate)
# ACF klesa velmi pomaly co potvrdzuje trend preto bude pracovat dalej uz len
# s diferenciami nasich dat, tie si takisto vykrslime
l = length(data_train[,1])
plot(as.integer(rownames(data_train))[1:(l-1)],diff(data_train$interestRate))
lines(as.integer(rownames(data_train))[1:(l-1)],diff(data_train$interestRate))
acf(diff(data_train$interestRate))
# Dalsi krok je testovani jednotkovy koren pomocou ADF testu
# v tomto pripade pouzijeme type="drift" kedze tvrdime, ze nase povodne
# data maju linearny trend a preto nase diferencie budu mat konstantny clen
urTest = ur.df(diff(data_train$interestRate), type = "drift", lags = 12, selectlags = "BIC")
summary(urTest)
Box.test(diff(data_train$interestRate),
lag = 12,
type = "Ljung-Box")
testik <- rnorm(100)^5
lb <- mapply(function(x) Box.test(diff(data_train$interestRate), lag = x, type = "Ljung-Box")$p.value , 1:12)
lb <- mapply(function(x) Box.test(testik , lag = x, type = "Ljung-Box")$p.value , 1:12)
plot(lb, ylim=c(0,1))
lines(1:12,rep(0.05, 12), lty='dashed', col = "blue")
# Teraz sa mozeme pustit do hladania najlepsieho modelu
acf2(diff(data_train$interestRate))
sarima(data_train$interestRate, 1,0,0, no.constant = FALSE)
sarima(data_train$interestRate, 1,1,0, no.constant = FALSE)
?sarima
sarima(data_train$interestRate, 1,1,0, no.constant = FALSE)
sarima(data_train$interestRate, 1,1,1, no.constant = FALSE)
sarima(data_train$interestRate, 10,1,1, no.constant = FALSE)
sarima(data_train$interestRate, 100,1,1, no.constant = FALSE)
sarima(data_train$interestRate, 20,1,1, no.constant = FALSE)
sarima(data_train$interestRate, 1,1,1, no.constant = FALSE)
library(astsa)
y <- ts(fmri$L1T2[, 2])
plot(y)
plot(diff(y))
y
plot(y)
urTest = ur.df(y, type = "drift", lags = 30, selectlags = "BIC")
summary(urTest)
urTest = ur.df(y, type = "drift", lags = 1, selectlags = "BIC")
summary(urTest)
urTest = ur.df(y, type = "drift", lags = 30, selectlags = "BIC")
summary(urTest)
urTest = ur.df(y, type = "drift", lags = 30, selectlags = "BIC")
summary(urTest)
urTest = ur.df(y, type = "drift", lags = 3000, selectlags = "BIC")
urTest = ur.df(y, type = "drift", lags = 110, selectlags = "BIC")
summary(urTest)
urTest = ur.df(y, type = "drift", lags = 80, selectlags = "BIC")
summary(urTest)
urTest = ur.df(y, type = "drift", lags = 60, selectlags = "BIC")
summary(urTest)
urTest = ur.df(y, type = "drift", lags = 30, selectlags = "BIC")
summary(urTest)
urTest
a = summary(urTest)
a
a$p.value
# Dalsi krok je testovani jednotkovy koren pomocou ADF testu
# v tomto pripade pouzijeme type="drift" kedze tvrdime, ze nase povodne
# data maju linearny trend a preto nase diferencie budu mat konstantny clen
urTest = ur.df(diff(data_train$interestRate), type = "drift", lags = 12, selectlags = "BIC")
summary(urTest)
?ur.test
?ur.df
urTest = ur.df(y, type = "none", lags = 30, selectlags = "BIC")
summary(urTest)
# ako prve si vykreslime nase trenovacie data
plot(as.integer(rownames(data_train)), data_train$interestRate)
lines(as.integer(rownames(data_train)),data_train$interestRate)
# vidime klesajuci trend v datach ktory si este skusme potvrdit ACF funciou
acf2(data_train$interestRate)
acf2(y)
urTest = ur.df(y, type = "none", lags = 30, selectlags = "BIC")
summary(urTest)
plot(y)
mean(y)
sarima(y, 0,0,1, no.constant = FALSE)
acf2(y)
sarima(y, 0,0,1, no.constant = FALSE)
sarima(y, 0,1,1, no.constant = FALSE)
acf2(y)
sarima(y, 1,0,0, no.constant = FALSE)
acf2(y)
sarima(y, 1,0,0, no.constant = TRUE)
x <- sarima(data_train$interestRate, 1,1,0, no.constant = FALSE)
x$ttable
sarima(y, 1,0,0, no.constant = TRUE)
sarima(y, 1,0,0, no.constant = TRUE)$table
sarima(y, 1,0,0, no.constant = TRUE)$ttable
sarima(y, 2,0,0, no.constant = TRUE)$ttable
sarima(y, 1,1,0, no.constant = TRUE)$ttable
acf2(diff(y))
sarima(y, 2,1,1, no.constant = TRUE)$ttable
sarima(y, 0,1,1, no.constant = TRUE)$ttable
sarima(y, 0,1,1, no.constant = TRUE)
paste("BIC:", as.character(x$BIC))
sarima(y, 0,1,1, no.constant = TRUE)
sarima(y, 2,1,1, no.constant = TRUE)
sarima(y, 0,1,2, no.constant = TRUE)
sarima(y, 0,1,3, no.constant = TRUE)
sarima(y, 0,1,2, no.constant = TRUE)
sarima(y, 0,1,1, no.constant = TRUE)
sarima(y, 0,1,2, no.constant = TRUE)
sarima(y, 0,1,1, no.constant = TRUE)
acf2(diff(y))
# Dalsi krok je testovani jednotkovy koren pomocou ADF testu
# v tomto pripade pouzijeme type="drift" kedze tvrdime, ze nase povodne
# data maju linearny trend a preto nase diferencie budu mat konstantny clen
urTest = ur.df(diff(data_train$interestRate), type = "drift", lags = 12, selectlags = "BIC")
summary(urTest)
urTest = ur.df(data_train$interestRate, type = "drift", lags = 12, selectlags = "BIC")
summary(urTest)
?ur.df
urTest = ur.df(data_train$interestRate, type = "trend", lags = 12, selectlags = "BIC")
summary(urTest)
sarima(y, 0,0,1, no.constant = FALSE)
acf2(y)
acf2(y)
urTest = ur.df(y, type = "none", lags = 30, selectlags = "BIC")
summary(urTest)
sarima(y, 1,0,4, no.constant = FALSE)
sarima(y, 1,0,2, no.constant = FALSE)
sarima(y, 1,0,1, no.constant = FALSE)
sarima(y, 1,0,0, no.constant = FALSE)
sarima(y, 1,0,1, no.constant = FALSE)
acf2(y)
acf2(y)
sarima(y, 1,0,0, no.constant = FALSE)
sarima(y, 2,0,0, no.constant = FALSE)
sarima(y, 1,0,0, no.constant = FALSE)
sarima(y, 2,0,0, no.constant = FALSE)
# vidime klesajuci trend v datach ktory si este skusme potvrdit ACF funciou
acf2(data_train$interestRate)
# Teraz sa mozeme pustit do hladania najlepsieho modelu
acf2(diff(data_train$interestRate))
sarima(y, 2,0,0, no.constant = FALSE)
?ur.df
library(astsa)
x <- ts(fmri$L2T2[, 2])
plot(x)
lb <- mapply(function(z) Box.test(x, lag = z, type = "Ljung-Box")$p.value , 1:12)
plot(lb, ylim=c(0,1), xlab = "Lag", ylab = "P-hodnota")
lines(1:12,rep(0.05, 12), lty='dashed', col = "blue")
lb <- mapply(function(x) Box.test(diff(data_train$interestRate), lag = x, type = "Ljung-Box")$p.value , 1:12)
plot(lb, ylim=c(0,1), xlab = "Lag", ylab = "P-hodnota")
lines(1:12,rep(0.05, 12), lty='dashed', col = "blue")
plot(lb, ylim=c(0,1), xlab = "Lag", ylab = "P-hodnota")
sarima(y, 2,0,0, no.constant = FALSE)
acf(x)
y = acf(x)
y
plot(x)
mean(x)
acf(x)
sarima(y, 0,0,1, no.constant = FALSE)
sarima(x, 0,0,1, no.constant = FALSE)
sarima(x, 0,0,2, no.constant = FALSE)
sarima(x, 0,0,3, no.constant = FALSE)
sarima(x, 0,0,5, no.constant = FALSE)
sarima.for(x, n.ahead = 1, 0, 0, 3)
sarima(x, 0,0,5, no.constant = FALSE)
sarima(x, 0,0,3, no.constant = FALSE)
0.36^(1/3)
rnorm(100)
r = rnorm(100)
rep(0,10)
x = c(0, 100)
x = rep(0, 100)
for (i in 2:100) {
x[i] = 0.7113787*x[i-1] + r[i]
}
x
plot(x)
lines(x)
acf(x)
acf(x)[3]
x = rep(0, 1000)
r = rnorm(1000)
for (i in 2:1000) {
x[i] = 0.7113787*x[i-1] + r[i]
}
acf(x)
acf(x)[3]
x = rep(0, 3000)
r = rnorm(3000)
for (i in 2:3000) {
x[i] = 0.7113787*x[i-1] + r[i]
}
sarima(x, 1,0,0)
sarima(x, 2,0,0)
sarima(x, 20,0,0)
sarima(x, 6,0,0)
sarima(x, 6,0,2)
acf2(x)
sarima(x, 1,0,0)
acf(x)[3]
?arima.sim
yt <- arima.sim(list(order=c(1,0,0), ar=.5), n=500)
xt <- yt + 10
plot(yt)
yt <- arima.sim(list(order=c(4,0,0), ar=.5), n=500)
yt <- arima.sim(list(order=c(4,0,0), ar1=0, ar2=0, ar3=0, ar4=0.5), n=500)
sarima(x, 0,0,3, no.constant = FALSE)
u =sarima(x, 0,0,3, no.constant = FALSE)
u
u[ma1]
u[ma]
yt <- arima.sim(list(order=c(4,0,0), ar=c(0,0,0,0.5)), n=500)
plot(yt)
acf(yt)
print(act(yt))
print(acf(yt))
yt <- arima.sim(list(order=c(4,0,0), ar=c(0,0,0,0.5)), n=5000)
print(acf(yt))
yt <- arima.sim(list(order=c(2,0,0), ar=c(0.5,-0.1), xmean=10), n=5000)
plot(yt)
pacf(yt)
yt <- arima.sim(list(order=c(2,0,0), ar=c(0.5,-0.1), xmean=1000), n=5000)
pacf(yt)
pacf(yt)
yt <- arima.sim(list(order=c(2,0,0), ar=c(0.5,-0.1), xmean=10), n=5000)
pacf(yt)
pacf(yt)[1:3]
yt <- arima.sim(list(order=c(2,0,0), ar=c(0.5,-0.1), xmean=1000), n=5000)
pacf(yt)[1:3]
yt <- arima.sim(list(order=c(2,0,0), ar=c(0.5,-0.1), xmean=1000), n=5000)
pacf(yt)[1:3]
yt <- arima.sim(list(order=c(2,0,0), ar=c(0.5,-0.1), xmean=1000), n=50000)
pacf(yt)[1:3]
yt <- arima.sim(list(order=c(2,0,0), ar=c(0.5,-0.1), xmean=1000), n=50000)
pacf(yt)[1:3]
yt <- arima.sim(list(order=c(2,0,0), ar=c(0.5,-0.1), xmean=1000), n=5000000)
pacf(yt)[1:3]
yt <- arima.sim(list(order=c(2,0,0), ar=c(0.5,-0.1), xmean=1000), n=5000000)
pacf(yt)[1:3]
yt <- arima.sim(list(order=c(4,0,0), ar=c(0,0,0,0.5)), n=5000000)
acf(yt)
print(acf(yt))
garch(1,1)
install.packages("fGarch")
library(fGarch)
garch(1,1)
garchFit(~garch(1,1), data=x)
sarima.for(x, n.ahead = 1, 0, 0, 3)
library(astsa)
x <- ts(fmri$L2T2[, 2])
plot(x)
lb <- mapply(function(z) Box.test(x, lag = z, type = "Ljung-Box")$p.value , 1:12)
plot(lb, ylim=c(0,1), xlab = "Lag", ylab = "P-hodnota")
lines(1:12,rep(0.05, 12), lty='dashed', col = "blue")
acf(x)
sarima(x, 0,0,3, no.constant = FALSE)
ww <- sarima(x, 0,0,3, no.constant = FALSE)
ww <- garchFit(~garch(1,1), x)
ww$residuals
ww@residuals
acf(ww@residuals/ww@sigma.t)
ww <- garchFit(~garch(1,1), x)
summary(ww)
# Ako prve si nastavime cestu k nasim datam a nacitame ich
setwd("C:/Users/majko/Desktop/Casove_rady_projekt")
data <- read.csv("ECB Data Portal_20231112202535.csv",
header=TRUE)
# Teraz si tie data pripravime (pridame stlpec roku)
data <- data[c(2,3)]
colnames(data) <- c("yearMonth", "interestRate")
data["year"] <- as.integer(substring(data$yearMonth, 1,4 ))
# Tieto data si to
data_train <- data[data$year %in% 2001:2020,]
data_predict <- data[data$year > 2020,]
# ako prve si vykreslime nase trenovacie data
plot(as.integer(rownames(data_train)), data_train$interestRate)
lines(as.integer(rownames(data_train)),data_train$interestRate)
plot(as.integer(rownames(data_train))[1:(l-1)],diff(data_train$interestRate))
lines(as.integer(rownames(data_train))[1:(l-1)],diff(data_train$interestRate))
library(astsa)
y <- ts(fmri$L1T2[, 2])
plot(y)
acf2(y)
plot(y)
?ur.df
mean(y)
urTest = ur.df(y, type = "drift", lags = 30, selectlags = "BIC")
summary(urTest)
urTest = ur.df(y, type = "drift", lags = 10, selectlags = "BIC")
summary(urTest)
urTest = ur.df(y, type = "drift", lags = 30, selectlags = "BIC")
summary(urTest)
acf2(y)
sarima(y, 1,0,0, no.constant = FALSE)
sarima(y, 2,0,0, no.constant = FALSE)
sarima(data_train$interestRate, 1,1,0, no.constant = FALSE)
sarima(data_train$interestRate, 0,1,1, no.constant = FALSE)
sarima(data_train$interestRate, 1,1,1, no.constant = FALSE)
sarima(data_train$interestRate, 0,1,1, no.constant = FALSE)
sarima(y, 2,0,0, no.constant = FALSE)
acf2(y)
acf2(diff(data_train$interestRate))
acf2(y)
library(astsa)
x <- ts(fmri$L2T2[, 2])
plot(x)
lb <- mapply(function(z) Box.test(x, lag = z, type = "Ljung-Box")$p.value , 1:24)
plot(lb, ylim=c(0,1), xlab = "Lag", ylab = "P-hodnota")
lines(1:12,rep(0.05, 12), lty='dashed', col = "blue")
lines(1:24,rep(0.05, 24), lty='dashed', col = "blue")
acf(x)
acf(x)[1]
sarima(x, 0,0,1, no.constant = FALSE)
sarima(x, 0,0,2, no.constant = FALSE)
sarima(x, 0,0,3, no.constant = FALSE)
sarima(x, 0,0,4, no.constant = FALSE)
sarima(x, 0,0,1, no.constant = FALSE)
sarima(x, 0,0,10, no.constant = FALSE)
sarima(x, 0,0,1, no.constant = FALSE)
sarima(x, 0,0,3, no.constant = FALSE)
sarima.for(x, n.ahead = 1, 0, 0, 3)
sarima.for{(x, n.ahead = 1, 0, 0, 3)$pref
sarima.for(x, n.ahead = 1, 0, 0, 3)$pred
polynomial(coef = c(0, 1))
library(polynom)
polynomial(coef = c(0, 1))
polynomial(coef = c(0, 1, 1))
p = polynomial(coef = c(0, 1, 1))
solve(p)
solve(polynomial(coef = c(1, -0.5, 0.4)))
solve(polynomial(coef = c(1, -0.5, 0.4))) > 1
solve(polynomial(coef = c(1, -0.5, 0.4))) > 1i
yt <- arima.sim(list(order=c(2,0,0), ar=c(0.5,-0.1), xmean=10), n=5000000)
pacf(yt)
pacf(yt)[1:2]
yt <- arima.sim(list(order=c(4,0,0), ar=c(0,0,0,0.5)), n=5000000)
acf(yt)
print(acf(yt))
ARMAtoMA(ar = c(0.5, 0.2), lag.max=5)
yt <- arima.sim(list(order=c(2,0,3), ar=c(0,0.5), ma=c(0,0,0.5)), n=5000000)
acf2(yt)
yt <- arima.sim(list(order=c(2,0,3), ar=c(0,0.5), ma=c(0,0,0.5)), n=500000)
acf2(yt)
yt <- arima.sim(list(order=c(2,0,3), ar=c(0,0.01), ma=c(0,0,0.01)), n=500000)
acf2(yt)
acf2(yt)[1:10]
acf(yt)[1:10]
pacf(yt)[1:10]
yt <- arima.sim(list(order=c(2,0,3), ar=c(0.01,0.01), ma=c(0.01,0.01,0.01)), n=500000)
acf(yt)[1:10]
pacf(yt)[1:10]
acf(yt)[1:10]
pacf(yt)[1:10]
yt <- arima.sim(list(order=c(2,0,3), ar=c(0.01,0.01), ma=c(0.01,0.01,0.01)), n=5000000)
acf(yt)[1:10]
pacf(yt)[1:10]
ARMAacf(ar=c(0.01,0.01), ma=c(0.01,0.01,0.01))
ARMAacf(ar=c(0.01,0.01), ma=c(0.01,0.01,0.01))
ARMAacf(ar=c(0.01,0.01), ma=c(0.01,0.01,0.01), lag.max = 100)
ARMAacf(ar=c(0.01,0.01), ma=c(0.01,0.01,0.01), lag.max = 10)
ARMAacf(ar=c(0.01,0.01), ma=c(0.01,0.01,0.01), lag.max = 10, pacf = TRUE)
ARMAacf(ar=c(0.01,0.01), ma=c(0.01,0.01,0.01), lag.max = 5, pacf = TRUE)
solve(polynomial(coef = c(1, 0.7, 0.1)))
1/0.7
library(datasets)
y <- ts(faithful[,2])
plot(y)
mean(y)
urTest = ur.df(y, type = "drift", lags = 30, selectlags = "BIC")
summary(urTest)
library(astsa)
y <- ts(fmri$L1T2[, 2])
plot(y)
acf2(y)
urTest = ur.df(y, type = "drift", lags = 30, selectlags = "BIC")
summary(urTest)
library(datasets)
y <- ts(faithful[,2])
plot(y)
mean(y)
urTest = ur.df(y, type = "drift", lags = 30, selectlags = "BIC")
summary(urTest)
acf2(y)
sarima(y, 1,0,2, no.constant = FALSE)
sarima(y, 1,0,1, no.constant = FALSE)
sarima(y, 1,0,0, no.constant = FALSE)
mean(y)
urTest = ur.df(y, type = "drift", lags = 30, selectlags = "BIC")
summary(urTest)
acf2(y)
sarima(y, 1,0,0, no.constant = FALSE)
sarima(y, 1,0,1, no.constant = FALSE)
sarima(y, 1,0,2, no.constant = FALSE)
sarima(y, 1,0,0, no.constant = FALSE)
70.882/1.5382
y <- log(AirPassengers)
x <- log(AirPassengers)
plot(x)
?HoltWinters
HoltWinters(x, seasonal = "additive")
HoltWinters(x, alpha=1/3, beta=1/3, gamma=1/3, seasonal = "additive")
h <- HoltWinters(x, alpha=1/3, beta=1/3, gamma=1/3, seasonal = "additive")
h$SSE
acf(diff(x))[1]
acf(diff(x))[1:10]
vv <- acf(diff(x))
x
vv
x
plot(x)
lb <- mapply(function(z) Box.test(diff(x), lag = z, type = "Ljung-Box")$p.value , 1:24)
plot(lb, ylim=c(0,1), xlab = "Lag", ylab = "P-hodnota")
lines(1:24,rep(0.05, 24), lty='dashed', col = "blue")
2024-202.4
acf2(y)
solve(polynomial(coef = c(-1, 24/20, 1)))
20/24 - 1
20/24 - 1 - (0.1*20/24)
0.25*24/20
yt <- arima.sim(list(order=c(0,0,6), ma=c(-0.2,-0.3,0,-0.24,0.2*0.24,0.3*0.24)), n=5000000)
acf(yt)[1:10]
yt <- arima.sim(list(order=c(1,0,1), ar=c(0.2024), ma=c(0.2024)), n=5000000)
pacf(yt)[1:10]
yt <- arima.sim(list(order=c(2,0,0), ar=c(0.2024, 0.02), n=5000000)
yt <- arima.sim(list(order=c(2,0,0), ar=c(0.2024, 0.02)), n=5000000)
yt <- arima.sim(list(order=c(2,0,0), ar=c(0.2024, 0.02)), n=5000000)
acf(yt)[1:10]
yt <- arima.sim(list(order=c(2,0,2), ar=c(0.2024, 0.02), ma=c(0.01, 0.01)), n=5000000)
acf(yt)[1:10]
pacf(yt)[1:10]
pacf(yt)[1:10]
acf(yt)[1:10]
pacf(yt)[1:10]
yt <- arima.sim(list(order=c(0,0,12), ma=c(rep(0,11),0.1))), n=5000000)
yt <- arima.sim(list(order=c(0,0,12), ma=c(rep(0,11),0.1)), n=5000000)
acf(yt)[1:13]
solve(polynomial(coef = c(-1, 1,0,1)))
yt <- arima.sim(list(order=c(0,0,1), ma=c(-0.6823), n=5000000)
yt <- arima.sim(list(order=c(0,0,1), ma=c(-0.6823)), n=5000000)
pacf(yt)[1:10]
yt <- arima.sim(list(order=c(0,0,1), ma=c(-0.6823)), n=5000000)
acf(yt)[1:13]
pacf(yt)[1:10]
yt <- arima.sim(list(order=c(0,0,1), ma=c(0.6823)), n=5000000)
acf(yt)[1:13]
pacf(yt)[1:10]
yt <- arima.sim(list(order=c(0,0,1), ma=c(-0.6823)), n=5000000)
acf(yt)[1:13]
pacf(yt)[1:10]
yt <- arima.sim(list(order=c(0,0,1), ma=c(-0.682378)), n=5000000)
acf(yt)[1:13]
pacf(yt)[1:10]
solve(polynomial(coef = c(1, 0,0,0, 0.01, 0, 0, 0, 0.001)))
solve(polynomial(coef = c(1, 0,0,0, 0.0000001, 0, 0, 0, 0.0000001)))
solve(polynomial(coef = c(1, 0.1, -0.1)))
solve(polynomial(coef = c(1, 1000, -1000)))
solve(polynomial(coef = c(-1, 1, 2,-1)))
yt <- arima.sim(list(order=c(0,0,1), ma=c(0.5549581)), n=5000000)
acf(yt)[1:13]
pacf(yt)[1:10]
yt <- arima.sim(list(order=c(0,0,1), ma=c(-0.5549581)), n=5000000)
acf(yt)[1:13]
pacf(yt)[1:10]
